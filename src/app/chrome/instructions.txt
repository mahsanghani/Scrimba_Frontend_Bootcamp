Instructions for Chrome Extension

/*1. Grab the box from the DOM and store it in a variable
2. Add a click event listener to the box
3. Log out "I want to open the box!" when it's clicked*/

/*Refactor the code so that it uses .addEventListener()
when you click the SAVE INPUT button*/

/*If possible, use const. If not, use let.
Which variables below should be changed from let to const?
The customer wants to order some stuff. Here are the details:
Whops! Turns out the shipping will be a bit more complex
Calculating the full price
Finally, notifying the customer*/

// Push the value "www.awesomelead.com" to myArray when the input button is clicked

/*Push the value from the inputEl into the myLeads array
instead of the hard-coded "www.awesomeleads.com" value
Google -> "get value from input field javascript"*/

// Log out the items in the myLeads array using a for loop

// 1. Create an unordered list element (<ul>) with id="ul-el"
// 2. Grab the unordered list and store it in a const variable called ulEl

// Render the leads in the unordered list using ulEl.textContent

// Use .innerHTML to render a Buy! button inside the div container

// Use .innerHTML to render a Buy! button inside the div container

// When clicked, render a paragraph under the button (in the container)
// that says "Thank you for buying!"

// Let's try a different method!
// create element
// set text content
// append to ul

// 1. Create a variable, listItems, to hold all the HTML for the list items
// Assign it to an empty string to begin with
// 2. Add the item to the listItems variable instead of the ulEl.innerHTML
// 3. Render the listItems inside the unordered list using ulEl.innerHTML

// 1. Wrap the code below in a renderLeads() function
// 2. Call the renderLeads() function

// Clear out the input field

// Wrap the lead in an anchor tag (<a>) inside the <li>
// Can you make the link open in a new tab?

// Refactor the code below to use a template string

/* STYLE THE LIST ACCORDING TO THE DESIGN */

// 1. Save a key-value pair in localStorage
// 2. Refresh the page. Get the value and log it to the console
// 3. Clear localStorage

// HINTS:
// localStorage.setItem(key, value)
// localStorage.getItem(key)
// localStorage.clear()
// PS: both key and value need to be strings

// 1. Turn the myLeads string into an array
// 2. Push a new value to the array
// 3. Turn the array into a string again
// 4. Console.log the string using typeof to verify that it's a string

// Save the myLeads array to localStorage
// PS: remember JSON.stringify()
// To verify that it works:
// console.log( localStorage.getItem("myLeads") )

// Get the leads from the localStorage
// Store it in a variable, leadsFromLocalStorage
// Log out the variable
// To verify that it works:
// console.log( localStorage.getItem("myLeads") )

// 1. Check if leadsFromLocalStorage is truthy
// 2. If so, set myLeads to its value and call renderLeads()

// 1. Store the delete button in a deleteBtn variable
// 2. Listen for double clicks on the delete button (google it!)
// 3. When clicked, clear localStorage, myLeads, and the DOM

// Refector the function so that it takes a parameter, leads, that it uses
// instead of the global myLeads variable. Remember to update all invocations
// of the function as well.

// 1. Grab the SAVE TAB button and store it in a tabBtn variable
// 2. Listen for clicks on tabBtn. Log Per's LinkedIn URL to the console
