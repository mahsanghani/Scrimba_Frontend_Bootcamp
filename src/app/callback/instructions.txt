/**
Challenge: Add a button that, when clicked, gets a new deck of cards from the deckofcards API
URL: https://apis.scrimba.com/deckofcards/api/deck/new/shuffle/
Log the whole response to the console
*/

/**
* Challenge: Define our anonymous callback function as a separate function, then
* pass it as the 2nd parameter to our `addEventListener`
*/

/**
* Challenge:
* Part 1: write a `setTimeout` command. Have it wait for 2000 ms before logging "I finally ran!" to the console
* Part 2: Part 2: Move the anonymous in-line function to its own, named function
*/

/**
* Challenge:
* Part 1: Given the array of objects below, create a new array with the `.filter()` array method that contains only the objects where "hasPet" is true
* Part 2: Move the anonymous in-line function to its own, named function
*/

/**
* Challenge:
*
* Write your own `filter` function! Don't worry about adding it to the prototype of arrays or anything.
* This function should take 2 parameters:
* 1. The array you want to filter through, and
* 2. A callback function
*
* Steps for filterArray function logic:
* 1. Initialize a new, empty array which will be returned at the end of the `filterArray`s operations (Completed âœ…)
* 2. Loop through the array passed as the 1st parameter
* 3. Inside the loop, call the callback function, passing the individual item you're currently looping over as the argument to your callback function
* 4. If the callback function returns `true`, push the current item you're iterating on in the loop to the new array. If it returns `false`, don't push it to the array.
* 5. When the loop is over, return the new array
*/

/**
* Challenge: Use your filter array method!
* Given the above `people` array, return a new array with only people where `hasPet` is true
* Note: Remember that your callback function will be given the individual item in the array for a parameter
*/
